package com.dynastech.system.entity;

import java.util.ArrayList;
import java.util.List;

public class OrganizationDepthExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table RS_OrganizationDepth
     *
     * @mbggenerated Wed Jul 26 17:45:19 CST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table RS_OrganizationDepth
     *
     * @mbggenerated Wed Jul 26 17:45:19 CST 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table RS_OrganizationDepth
     *
     * @mbggenerated Wed Jul 26 17:45:19 CST 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table RS_OrganizationDepth
     *
     * @mbggenerated Wed Jul 26 17:45:19 CST 2017
     */
    public OrganizationDepthExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table RS_OrganizationDepth
     *
     * @mbggenerated Wed Jul 26 17:45:19 CST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table RS_OrganizationDepth
     *
     * @mbggenerated Wed Jul 26 17:45:19 CST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table RS_OrganizationDepth
     *
     * @mbggenerated Wed Jul 26 17:45:19 CST 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table RS_OrganizationDepth
     *
     * @mbggenerated Wed Jul 26 17:45:19 CST 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table RS_OrganizationDepth
     *
     * @mbggenerated Wed Jul 26 17:45:19 CST 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table RS_OrganizationDepth
     *
     * @mbggenerated Wed Jul 26 17:45:19 CST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table RS_OrganizationDepth
     *
     * @mbggenerated Wed Jul 26 17:45:19 CST 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table RS_OrganizationDepth
     *
     * @mbggenerated Wed Jul 26 17:45:19 CST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table RS_OrganizationDepth
     *
     * @mbggenerated Wed Jul 26 17:45:19 CST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table RS_OrganizationDepth
     *
     * @mbggenerated Wed Jul 26 17:45:19 CST 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table RS_OrganizationDepth
     *
     * @mbggenerated Wed Jul 26 17:45:19 CST 2017
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andChildidIsNull() {
            addCriterion("orgDepth.ChildId is null");
            return (Criteria) this;
        }

        public Criteria andChildidIsNotNull() {
            addCriterion("orgDepth.ChildId is not null");
            return (Criteria) this;
        }

        public Criteria andChildidEqualTo(String value) {
            addCriterion("orgDepth.ChildId =", value, "childid");
            return (Criteria) this;
        }

        public Criteria andChildidNotEqualTo(String value) {
            addCriterion("orgDepth.ChildId <>", value, "childid");
            return (Criteria) this;
        }

        public Criteria andChildidGreaterThan(String value) {
            addCriterion("orgDepth.ChildId >", value, "childid");
            return (Criteria) this;
        }

        public Criteria andChildidGreaterThanOrEqualTo(String value) {
            addCriterion("orgDepth.ChildId >=", value, "childid");
            return (Criteria) this;
        }

        public Criteria andChildidLessThan(String value) {
            addCriterion("orgDepth.ChildId <", value, "childid");
            return (Criteria) this;
        }

        public Criteria andChildidLessThanOrEqualTo(String value) {
            addCriterion("orgDepth.ChildId <=", value, "childid");
            return (Criteria) this;
        }

        public Criteria andChildidLike(String value) {
            addCriterion("orgDepth.ChildId like", value, "childid");
            return (Criteria) this;
        }

        public Criteria andChildidNotLike(String value) {
            addCriterion("orgDepth.ChildId not like", value, "childid");
            return (Criteria) this;
        }

        public Criteria andChildidIn(List<String> values) {
            addCriterion("orgDepth.ChildId in", values, "childid");
            return (Criteria) this;
        }

        public Criteria andChildidNotIn(List<String> values) {
            addCriterion("orgDepth.ChildId not in", values, "childid");
            return (Criteria) this;
        }

        public Criteria andChildidBetween(String value1, String value2) {
            addCriterion("orgDepth.ChildId between", value1, value2, "childid");
            return (Criteria) this;
        }

        public Criteria andChildidNotBetween(String value1, String value2) {
            addCriterion("orgDepth.ChildId not between", value1, value2, "childid");
            return (Criteria) this;
        }

        public Criteria andParentidIsNull() {
            addCriterion("orgDepth.ParentId is null");
            return (Criteria) this;
        }

        public Criteria andParentidIsNotNull() {
            addCriterion("orgDepth.ParentId is not null");
            return (Criteria) this;
        }

        public Criteria andParentidEqualTo(String value) {
            addCriterion("orgDepth.ParentId =", value, "parentid");
            return (Criteria) this;
        }

        public Criteria andParentidNotEqualTo(String value) {
            addCriterion("orgDepth.ParentId <>", value, "parentid");
            return (Criteria) this;
        }

        public Criteria andParentidGreaterThan(String value) {
            addCriterion("orgDepth.ParentId >", value, "parentid");
            return (Criteria) this;
        }

        public Criteria andParentidGreaterThanOrEqualTo(String value) {
            addCriterion("orgDepth.ParentId >=", value, "parentid");
            return (Criteria) this;
        }

        public Criteria andParentidLessThan(String value) {
            addCriterion("orgDepth.ParentId <", value, "parentid");
            return (Criteria) this;
        }

        public Criteria andParentidLessThanOrEqualTo(String value) {
            addCriterion("orgDepth.ParentId <=", value, "parentid");
            return (Criteria) this;
        }

        public Criteria andParentidLike(String value) {
            addCriterion("orgDepth.ParentId like", value, "parentid");
            return (Criteria) this;
        }

        public Criteria andParentidNotLike(String value) {
            addCriterion("orgDepth.ParentId not like", value, "parentid");
            return (Criteria) this;
        }

        public Criteria andParentidIn(List<String> values) {
            addCriterion("orgDepth.ParentId in", values, "parentid");
            return (Criteria) this;
        }

        public Criteria andParentidNotIn(List<String> values) {
            addCriterion("orgDepth.ParentId not in", values, "parentid");
            return (Criteria) this;
        }

        public Criteria andParentidBetween(String value1, String value2) {
            addCriterion("orgDepth.ParentId between", value1, value2, "parentid");
            return (Criteria) this;
        }

        public Criteria andParentidNotBetween(String value1, String value2) {
            addCriterion("orgDepth.ParentId not between", value1, value2, "parentid");
            return (Criteria) this;
        }

        public Criteria andParentdepthIsNull() {
            addCriterion("orgDepth.ParentDepth is null");
            return (Criteria) this;
        }

        public Criteria andParentdepthIsNotNull() {
            addCriterion("orgDepth.ParentDepth is not null");
            return (Criteria) this;
        }

        public Criteria andParentdepthEqualTo(Integer value) {
            addCriterion("orgDepth.ParentDepth =", value, "parentdepth");
            return (Criteria) this;
        }

        public Criteria andParentdepthNotEqualTo(Integer value) {
            addCriterion("orgDepth.ParentDepth <>", value, "parentdepth");
            return (Criteria) this;
        }

        public Criteria andParentdepthGreaterThan(Integer value) {
            addCriterion("orgDepth.ParentDepth >", value, "parentdepth");
            return (Criteria) this;
        }

        public Criteria andParentdepthGreaterThanOrEqualTo(Integer value) {
            addCriterion("orgDepth.ParentDepth >=", value, "parentdepth");
            return (Criteria) this;
        }

        public Criteria andParentdepthLessThan(Integer value) {
            addCriterion("orgDepth.ParentDepth <", value, "parentdepth");
            return (Criteria) this;
        }

        public Criteria andParentdepthLessThanOrEqualTo(Integer value) {
            addCriterion("orgDepth.ParentDepth <=", value, "parentdepth");
            return (Criteria) this;
        }

        public Criteria andParentdepthIn(List<Integer> values) {
            addCriterion("orgDepth.ParentDepth in", values, "parentdepth");
            return (Criteria) this;
        }

        public Criteria andParentdepthNotIn(List<Integer> values) {
            addCriterion("orgDepth.ParentDepth not in", values, "parentdepth");
            return (Criteria) this;
        }

        public Criteria andParentdepthBetween(Integer value1, Integer value2) {
            addCriterion("orgDepth.ParentDepth between", value1, value2, "parentdepth");
            return (Criteria) this;
        }

        public Criteria andParentdepthNotBetween(Integer value1, Integer value2) {
            addCriterion("orgDepth.ParentDepth not between", value1, value2, "parentdepth");
            return (Criteria) this;
        }

        public Criteria andSnIsNull() {
            addCriterion("orgDepth.Sn is null");
            return (Criteria) this;
        }

        public Criteria andSnIsNotNull() {
            addCriterion("orgDepth.Sn is not null");
            return (Criteria) this;
        }

        public Criteria andSnEqualTo(Integer value) {
            addCriterion("orgDepth.Sn =", value, "sn");
            return (Criteria) this;
        }

        public Criteria andSnNotEqualTo(Integer value) {
            addCriterion("orgDepth.Sn <>", value, "sn");
            return (Criteria) this;
        }

        public Criteria andSnGreaterThan(Integer value) {
            addCriterion("orgDepth.Sn >", value, "sn");
            return (Criteria) this;
        }

        public Criteria andSnGreaterThanOrEqualTo(Integer value) {
            addCriterion("orgDepth.Sn >=", value, "sn");
            return (Criteria) this;
        }

        public Criteria andSnLessThan(Integer value) {
            addCriterion("orgDepth.Sn <", value, "sn");
            return (Criteria) this;
        }

        public Criteria andSnLessThanOrEqualTo(Integer value) {
            addCriterion("orgDepth.Sn <=", value, "sn");
            return (Criteria) this;
        }

        public Criteria andSnIn(List<Integer> values) {
            addCriterion("orgDepth.Sn in", values, "sn");
            return (Criteria) this;
        }

        public Criteria andSnNotIn(List<Integer> values) {
            addCriterion("orgDepth.Sn not in", values, "sn");
            return (Criteria) this;
        }

        public Criteria andSnBetween(Integer value1, Integer value2) {
            addCriterion("orgDepth.Sn between", value1, value2, "sn");
            return (Criteria) this;
        }

        public Criteria andSnNotBetween(Integer value1, Integer value2) {
            addCriterion("orgDepth.Sn not between", value1, value2, "sn");
            return (Criteria) this;
        }

        public Criteria andParenttypeidIsNull() {
            addCriterion("orgDepth.ParentTypeId is null");
            return (Criteria) this;
        }

        public Criteria andParenttypeidIsNotNull() {
            addCriterion("orgDepth.ParentTypeId is not null");
            return (Criteria) this;
        }

        public Criteria andParenttypeidEqualTo(String value) {
            addCriterion("orgDepth.ParentTypeId =", value, "parenttypeid");
            return (Criteria) this;
        }

        public Criteria andParenttypeidNotEqualTo(String value) {
            addCriterion("orgDepth.ParentTypeId <>", value, "parenttypeid");
            return (Criteria) this;
        }

        public Criteria andParenttypeidGreaterThan(String value) {
            addCriterion("orgDepth.ParentTypeId >", value, "parenttypeid");
            return (Criteria) this;
        }

        public Criteria andParenttypeidGreaterThanOrEqualTo(String value) {
            addCriterion("orgDepth.ParentTypeId >=", value, "parenttypeid");
            return (Criteria) this;
        }

        public Criteria andParenttypeidLessThan(String value) {
            addCriterion("orgDepth.ParentTypeId <", value, "parenttypeid");
            return (Criteria) this;
        }

        public Criteria andParenttypeidLessThanOrEqualTo(String value) {
            addCriterion("orgDepth.ParentTypeId <=", value, "parenttypeid");
            return (Criteria) this;
        }

        public Criteria andParenttypeidLike(String value) {
            addCriterion("orgDepth.ParentTypeId like", value, "parenttypeid");
            return (Criteria) this;
        }

        public Criteria andParenttypeidNotLike(String value) {
            addCriterion("orgDepth.ParentTypeId not like", value, "parenttypeid");
            return (Criteria) this;
        }

        public Criteria andParenttypeidIn(List<String> values) {
            addCriterion("orgDepth.ParentTypeId in", values, "parenttypeid");
            return (Criteria) this;
        }

        public Criteria andParenttypeidNotIn(List<String> values) {
            addCriterion("orgDepth.ParentTypeId not in", values, "parenttypeid");
            return (Criteria) this;
        }

        public Criteria andParenttypeidBetween(String value1, String value2) {
            addCriterion("orgDepth.ParentTypeId between", value1, value2, "parenttypeid");
            return (Criteria) this;
        }

        public Criteria andParenttypeidNotBetween(String value1, String value2) {
            addCriterion("orgDepth.ParentTypeId not between", value1, value2, "parenttypeid");
            return (Criteria) this;
        }

        public Criteria andChilddepthIsNull() {
            addCriterion("orgDepth.ChildDepth is null");
            return (Criteria) this;
        }

        public Criteria andChilddepthIsNotNull() {
            addCriterion("orgDepth.ChildDepth is not null");
            return (Criteria) this;
        }

        public Criteria andChilddepthEqualTo(Integer value) {
            addCriterion("orgDepth.ChildDepth =", value, "childdepth");
            return (Criteria) this;
        }

        public Criteria andChilddepthNotEqualTo(Integer value) {
            addCriterion("orgDepth.ChildDepth <>", value, "childdepth");
            return (Criteria) this;
        }

        public Criteria andChilddepthGreaterThan(Integer value) {
            addCriterion("orgDepth.ChildDepth >", value, "childdepth");
            return (Criteria) this;
        }

        public Criteria andChilddepthGreaterThanOrEqualTo(Integer value) {
            addCriterion("orgDepth.ChildDepth >=", value, "childdepth");
            return (Criteria) this;
        }

        public Criteria andChilddepthLessThan(Integer value) {
            addCriterion("orgDepth.ChildDepth <", value, "childdepth");
            return (Criteria) this;
        }

        public Criteria andChilddepthLessThanOrEqualTo(Integer value) {
            addCriterion("orgDepth.ChildDepth <=", value, "childdepth");
            return (Criteria) this;
        }

        public Criteria andChilddepthIn(List<Integer> values) {
            addCriterion("orgDepth.ChildDepth in", values, "childdepth");
            return (Criteria) this;
        }

        public Criteria andChilddepthNotIn(List<Integer> values) {
            addCriterion("orgDepth.ChildDepth not in", values, "childdepth");
            return (Criteria) this;
        }

        public Criteria andChilddepthBetween(Integer value1, Integer value2) {
            addCriterion("orgDepth.ChildDepth between", value1, value2, "childdepth");
            return (Criteria) this;
        }

        public Criteria andChilddepthNotBetween(Integer value1, Integer value2) {
            addCriterion("orgDepth.ChildDepth not between", value1, value2, "childdepth");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table RS_OrganizationDepth
     *
     * @mbggenerated do_not_delete_during_merge Wed Jul 26 17:45:19 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table RS_OrganizationDepth
     *
     * @mbggenerated Wed Jul 26 17:45:19 CST 2017
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}