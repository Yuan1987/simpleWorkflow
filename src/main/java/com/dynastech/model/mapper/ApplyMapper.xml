<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dynastech.model.mapper.ApplyMapper" >
  <resultMap id="BaseResultMap" type="com.dynastech.model.entity.Apply" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Sep 19 09:42:01 CST 2017.
    -->
    <id column="a_id" property="id" jdbcType="NVARCHAR" />
    <result column="a_No" property="no" jdbcType="NVARCHAR" />
    <result column="a_Type" property="type" jdbcType="NVARCHAR" />
    <result column="a_Seq" property="seq" jdbcType="NVARCHAR" />
    <result column="a_Grade" property="grade" jdbcType="NVARCHAR" />
    <result column="a_UserId" property="userid" jdbcType="NVARCHAR" />
    <result column="a_UserName" property="username" jdbcType="NVARCHAR" />
    <result column="a_DeptCode" property="deptcode" jdbcType="NVARCHAR" />
    <result column="a_DeptName" property="deptname" jdbcType="NVARCHAR" />
    <result column="a_Status" property="status" jdbcType="NVARCHAR" />
    <result column="a_FlowStatus" property="flowstatus" jdbcType="NVARCHAR" />
    <result column="a_DateTimeCreated" property="datetimecreated" jdbcType="TIMESTAMP" />
    <result column="a_DateTimeModified" property="datetimemodified" jdbcType="TIMESTAMP" />
    <result column="a_isDeleted" property="isdeleted" jdbcType="BIT" />
    <result column="a_UnqualifiedQualifications" property="unqualifiedqualifications" jdbcType="NVARCHAR" />
    <result column="a_AbnormalityReasons" property="abnormalityreasons" jdbcType="NVARCHAR" />
    <result column="a_QualificationMatching" property="qualificationmatching" jdbcType="NVARCHAR" />
    <result column="a_GraduateSchool" property="graduateschool" jdbcType="NVARCHAR" />
    <result column="a_majors" property="majors" jdbcType="NVARCHAR" />
    <result column="a_Educational" property="educational" jdbcType="NVARCHAR" />
    <result column="a_degree" property="degree" jdbcType="NVARCHAR" />
    <result column="a_Experience" property="experience" jdbcType="NVARCHAR" />
    <result column="a_StandardsMatching" property="standardsmatching" jdbcType="NVARCHAR" />
    <result column="a_JobsType" property="jobstype" jdbcType="NVARCHAR" />
    <result column="a_JobsGrade" property="jobsgrade" jdbcType="NVARCHAR" />
    <result column="a_HaveQualificationSeq" property="havequalificationseq" jdbcType="NVARCHAR" />
    <result column="a_HaveQualificationGrade" property="havequalificationgrade" jdbcType="NVARCHAR" />
    <result column="a_HaveQualificationGrade_Time" property="havequalificationgradeTime" jdbcType="NVARCHAR" />
    <result column="a_WorkConditionsSeq" property="workconditionsseq" jdbcType="NVARCHAR" />
    <result column="a_WorkConditionsGrade" property="workconditionsgrade" jdbcType="NVARCHAR" />
    <result column="a_WorkConditionsGrade_annual" property="workconditionsgradeAnnual" jdbcType="NVARCHAR" />
    <result column="a_NuclearResultsFront" property="nuclearresultsfront" jdbcType="NVARCHAR" />
    <result column="a_NuclearResultsFront_annual" property="nuclearresultsfrontAnnual" jdbcType="NVARCHAR" />
    <result column="a_ImprovementPlanClosedloop" property="improvementplanclosedloop" jdbcType="BIT" />
    <result column="a_processId" property="processid" jdbcType="VARCHAR" />
    <result column="a_submitTime" property="submittime" jdbcType="TIMESTAMP" />
    
    
    <result column="a_TypeV" property="typeV" jdbcType="NVARCHAR" />
    <result column="a_SeqV" property="seqV" jdbcType="NVARCHAR" />
    <result column="a_GradeV" property="gradeV" jdbcType="NVARCHAR" />
    <result column="a_JobsTypeV" property="jobstypeV" jdbcType="NVARCHAR" />
    <result column="a_JobsGradeV" property="jobsgradeV" jdbcType="NVARCHAR" />
    <result column="a_HaveQualificationSeqV" property="havequalificationseqV" jdbcType="NVARCHAR" />
    <result column="a_HaveQualificationGradeV" property="havequalificationgradeV" jdbcType="NVARCHAR" />
     <result column="a_WorkConditionsSeqV" property="workconditionsseqV" jdbcType="NVARCHAR" />
     <result column="a_WorkConditionsGradeV" property="workconditionsgradeV" jdbcType="NVARCHAR" />
  </resultMap>
  
  <resultMap id="applyWithEval" type="com.dynastech.model.entity.ApplyWithEval"  extends="BaseResultMap">
  	 <result column="evalStatus" property="evalStatus" jdbcType="VARCHAR" />
  	 <result column="evaluationFormId" property="evaluationFormId" jdbcType="VARCHAR" />
  	 <result column="evalsubmitTime" property="evalsubmittime" jdbcType="TIMESTAMP" />
  	 <result column="evalProcessId" property="evalProcessId" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Sep 19 09:42:01 CST 2017.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Sep 19 09:42:01 CST 2017.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    a.id as a_id, a.No as a_No, dbo.dicdecode('sqlx',a.Type) as a_TypeV,a.Type as a_type, dbo.dicdecode('sbxl',a.Seq) as a_SeqV,a.Seq as a_Seq,dbo.dicdecode('sbjb',a.Grade)as a_GradeV,a.Grade as a_Grade, 
    a.UserId as a_UserId, a.UserName as a_UserName, a.DeptCode as a_DeptCode, a.DeptName as a_DeptName, 
    a.Status as a_Status, a.FlowStatus as a_FlowStatus, a.DateTimeCreated as a_DateTimeCreated, 
    a.DateTimeModified as a_DateTimeModified, a.isDeleted as a_isDeleted, a.UnqualifiedQualifications as a_UnqualifiedQualifications, 
    a.AbnormalityReasons as a_AbnormalityReasons, a.QualificationMatching as a_QualificationMatching, 
    a.GraduateSchool as a_GraduateSchool, a.majors as a_majors, a.Educational as a_Educational, 
    a.degree as a_degree, a.Experience as a_Experience, a.StandardsMatching as a_StandardsMatching, 
    a.JobsType as a_JobsType,dbo.dicdecode('sbxl',a.JobsType) as a_JobsTypeV, a.JobsGrade as a_JobsGrade,dbo.dicdecode('sbjb',a.JobsGrade)as a_JobsGradeV,
     a.HaveQualificationSeq as a_HaveQualificationSeq, dbo.dicdecode('sbxl',a.HaveQualificationSeq) as a_HaveQualificationSeqV,
    a.HaveQualificationGrade as a_HaveQualificationGrade, dbo.dicdecode('sbjb',a.HaveQualificationGrade)as a_HaveQualificationGradeV,
    a.HaveQualificationGrade_Time as a_HaveQualificationGrade_Time, 
    a.WorkConditionsSeq as a_WorkConditionsSeq,dbo.dicdecode('sbxl',a.WorkConditionsSeq) as a_WorkConditionsSeqV,
     a.WorkConditionsGrade as a_WorkConditionsGrade, dbo.dicdecode('sbjb',a.WorkConditionsGrade)as a_WorkConditionsGradeV,
    a.WorkConditionsGrade_annual as a_WorkConditionsGrade_annual, a.NuclearResultsFront as a_NuclearResultsFront, 
    a.NuclearResultsFront_annual as a_NuclearResultsFront_annual, a.ImprovementPlanClosedloop as a_ImprovementPlanClosedloop, 
    a.processId as a_processId, a.submitTime as a_submitTime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.dynastech.model.entity.ApplyExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Sep 19 09:42:01 CST 2017.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from T_Apply a
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Sep 19 09:42:01 CST 2017.
    -->
    select 
    <include refid="Base_Column_List" />
    from T_Apply a
    where a.id = #{id,jdbcType=NVARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Sep 19 09:42:01 CST 2017.
    -->
    delete from T_Apply
    where id = #{id,jdbcType=NVARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.dynastech.model.entity.ApplyExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Sep 19 09:42:01 CST 2017.
    -->
    delete from T_Apply a
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dynastech.model.entity.Apply" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Sep 19 09:42:01 CST 2017.
    -->
    insert into T_Apply (id, No, Type, 
      Seq, Grade, UserId, 
      UserName, DeptCode, DeptName, 
      Status, FlowStatus, DateTimeCreated, 
      DateTimeModified, isDeleted, UnqualifiedQualifications, 
      AbnormalityReasons, QualificationMatching, 
      GraduateSchool, majors, Educational, 
      degree, Experience, StandardsMatching, 
      JobsType, JobsGrade, HaveQualificationSeq, 
      HaveQualificationGrade, HaveQualificationGrade_Time, 
      WorkConditionsSeq, WorkConditionsGrade, 
      WorkConditionsGrade_annual, NuclearResultsFront, 
      NuclearResultsFront_annual, ImprovementPlanClosedloop, 
      processId, submitTime)
    values (#{id,jdbcType=NVARCHAR}, #{no,jdbcType=NVARCHAR}, #{type,jdbcType=NVARCHAR}, 
      #{seq,jdbcType=NVARCHAR}, #{grade,jdbcType=NVARCHAR}, #{userid,jdbcType=NVARCHAR}, 
      #{username,jdbcType=NVARCHAR}, #{deptcode,jdbcType=NVARCHAR}, #{deptname,jdbcType=NVARCHAR}, 
      #{status,jdbcType=NVARCHAR}, #{flowstatus,jdbcType=NVARCHAR}, #{datetimecreated,jdbcType=TIMESTAMP}, 
      #{datetimemodified,jdbcType=TIMESTAMP}, #{isdeleted,jdbcType=BIT}, #{unqualifiedqualifications,jdbcType=NVARCHAR}, 
      #{abnormalityreasons,jdbcType=NVARCHAR}, #{qualificationmatching,jdbcType=NVARCHAR}, 
      #{graduateschool,jdbcType=NVARCHAR}, #{majors,jdbcType=NVARCHAR}, #{educational,jdbcType=NVARCHAR}, 
      #{degree,jdbcType=NVARCHAR}, #{experience,jdbcType=NVARCHAR}, #{standardsmatching,jdbcType=NVARCHAR}, 
      #{jobstype,jdbcType=NVARCHAR}, #{jobsgrade,jdbcType=NVARCHAR}, #{havequalificationseq,jdbcType=NVARCHAR}, 
      #{havequalificationgrade,jdbcType=NVARCHAR}, #{havequalificationgradeTime,jdbcType=NVARCHAR}, 
      #{workconditionsseq,jdbcType=NVARCHAR}, #{workconditionsgrade,jdbcType=NVARCHAR}, 
      #{workconditionsgradeAnnual,jdbcType=NVARCHAR}, #{nuclearresultsfront,jdbcType=NVARCHAR}, 
      #{nuclearresultsfrontAnnual,jdbcType=NVARCHAR}, #{improvementplanclosedloop,jdbcType=BIT}, 
      #{processid,jdbcType=VARCHAR}, #{submittime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.dynastech.model.entity.Apply" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Sep 19 09:42:01 CST 2017.
    -->
    insert into T_Apply
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="no != null" >
        No,
      </if>
      <if test="type != null" >
        Type,
      </if>
      <if test="seq != null" >
        Seq,
      </if>
      <if test="grade != null" >
        Grade,
      </if>
      <if test="userid != null" >
        UserId,
      </if>
      <if test="username != null" >
        UserName,
      </if>
      <if test="deptcode != null" >
        DeptCode,
      </if>
      <if test="deptname != null" >
        DeptName,
      </if>
      <if test="status != null" >
        Status,
      </if>
      <if test="flowstatus != null" >
        FlowStatus,
      </if>
      <if test="datetimecreated != null" >
        DateTimeCreated,
      </if>
      <if test="datetimemodified != null" >
        DateTimeModified,
      </if>
      <if test="isdeleted != null" >
        isDeleted,
      </if>
      <if test="unqualifiedqualifications != null" >
        UnqualifiedQualifications,
      </if>
      <if test="abnormalityreasons != null" >
        AbnormalityReasons,
      </if>
      <if test="qualificationmatching != null" >
        QualificationMatching,
      </if>
      <if test="graduateschool != null" >
        GraduateSchool,
      </if>
      <if test="majors != null" >
        majors,
      </if>
      <if test="educational != null" >
        Educational,
      </if>
      <if test="degree != null" >
        degree,
      </if>
      <if test="experience != null" >
        Experience,
      </if>
      <if test="standardsmatching != null" >
        StandardsMatching,
      </if>
      <if test="jobstype != null" >
        JobsType,
      </if>
      <if test="jobsgrade != null" >
        JobsGrade,
      </if>
      <if test="havequalificationseq != null" >
        HaveQualificationSeq,
      </if>
      <if test="havequalificationgrade != null" >
        HaveQualificationGrade,
      </if>
      <if test="havequalificationgradeTime != null" >
        HaveQualificationGrade_Time,
      </if>
      <if test="workconditionsseq != null" >
        WorkConditionsSeq,
      </if>
      <if test="workconditionsgrade != null" >
        WorkConditionsGrade,
      </if>
      <if test="workconditionsgradeAnnual != null" >
        WorkConditionsGrade_annual,
      </if>
      <if test="nuclearresultsfront != null" >
        NuclearResultsFront,
      </if>
      <if test="nuclearresultsfrontAnnual != null" >
        NuclearResultsFront_annual,
      </if>
      <if test="improvementplanclosedloop != null" >
        ImprovementPlanClosedloop,
      </if>
      <if test="processid != null" >
        processId,
      </if>
      <if test="submittime != null" >
        submitTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=NVARCHAR},
      </if>
      <if test="no != null" >
        #{no,jdbcType=NVARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=NVARCHAR},
      </if>
      <if test="seq != null" >
        #{seq,jdbcType=NVARCHAR},
      </if>
      <if test="grade != null" >
        #{grade,jdbcType=NVARCHAR},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=NVARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=NVARCHAR},
      </if>
      <if test="deptcode != null" >
        #{deptcode,jdbcType=NVARCHAR},
      </if>
      <if test="deptname != null" >
        #{deptname,jdbcType=NVARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=NVARCHAR},
      </if>
      <if test="flowstatus != null" >
        #{flowstatus,jdbcType=NVARCHAR},
      </if>
      <if test="datetimecreated != null" >
        #{datetimecreated,jdbcType=TIMESTAMP},
      </if>
      <if test="datetimemodified != null" >
        #{datetimemodified,jdbcType=TIMESTAMP},
      </if>
      <if test="isdeleted != null" >
        #{isdeleted,jdbcType=BIT},
      </if>
      <if test="unqualifiedqualifications != null" >
        #{unqualifiedqualifications,jdbcType=NVARCHAR},
      </if>
      <if test="abnormalityreasons != null" >
        #{abnormalityreasons,jdbcType=NVARCHAR},
      </if>
      <if test="qualificationmatching != null" >
        #{qualificationmatching,jdbcType=NVARCHAR},
      </if>
      <if test="graduateschool != null" >
        #{graduateschool,jdbcType=NVARCHAR},
      </if>
      <if test="majors != null" >
        #{majors,jdbcType=NVARCHAR},
      </if>
      <if test="educational != null" >
        #{educational,jdbcType=NVARCHAR},
      </if>
      <if test="degree != null" >
        #{degree,jdbcType=NVARCHAR},
      </if>
      <if test="experience != null" >
        #{experience,jdbcType=NVARCHAR},
      </if>
      <if test="standardsmatching != null" >
        #{standardsmatching,jdbcType=NVARCHAR},
      </if>
      <if test="jobstype != null" >
        #{jobstype,jdbcType=NVARCHAR},
      </if>
      <if test="jobsgrade != null" >
        #{jobsgrade,jdbcType=NVARCHAR},
      </if>
      <if test="havequalificationseq != null" >
        #{havequalificationseq,jdbcType=NVARCHAR},
      </if>
      <if test="havequalificationgrade != null" >
        #{havequalificationgrade,jdbcType=NVARCHAR},
      </if>
      <if test="havequalificationgradeTime != null" >
        #{havequalificationgradeTime,jdbcType=NVARCHAR},
      </if>
      <if test="workconditionsseq != null" >
        #{workconditionsseq,jdbcType=NVARCHAR},
      </if>
      <if test="workconditionsgrade != null" >
        #{workconditionsgrade,jdbcType=NVARCHAR},
      </if>
      <if test="workconditionsgradeAnnual != null" >
        #{workconditionsgradeAnnual,jdbcType=NVARCHAR},
      </if>
      <if test="nuclearresultsfront != null" >
        #{nuclearresultsfront,jdbcType=NVARCHAR},
      </if>
      <if test="nuclearresultsfrontAnnual != null" >
        #{nuclearresultsfrontAnnual,jdbcType=NVARCHAR},
      </if>
      <if test="improvementplanclosedloop != null" >
        #{improvementplanclosedloop,jdbcType=BIT},
      </if>
      <if test="processid != null" >
        #{processid,jdbcType=VARCHAR},
      </if>
      <if test="submittime != null" >
        #{submittime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dynastech.model.entity.ApplyExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Sep 19 09:42:01 CST 2017.
    -->
    select count(*) from T_Apply a
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update a 
    <set >
      <if test="record.id != null" >
        a.id = #{record.id,jdbcType=NVARCHAR},
      </if>
      <if test="record.no != null" >
        a.No = #{record.no,jdbcType=NVARCHAR},
      </if>
      <if test="record.type != null" >
        a.Type = #{record.type,jdbcType=NVARCHAR},
      </if>
      <if test="record.seq != null" >
        a.Seq = #{record.seq,jdbcType=NVARCHAR},
      </if>
      <if test="record.grade != null" >
        a.Grade = #{record.grade,jdbcType=NVARCHAR},
      </if>
      <if test="record.userid != null" >
        a.UserId = #{record.userid,jdbcType=NVARCHAR},
      </if>
      <if test="record.username != null" >
        a.UserName = #{record.username,jdbcType=NVARCHAR},
      </if>
      <if test="record.deptcode != null" >
        a.DeptCode = #{record.deptcode,jdbcType=NVARCHAR},
      </if>
      <if test="record.deptname != null" >
        a.DeptName = #{record.deptname,jdbcType=NVARCHAR},
      </if>
      <if test="record.status != null" >
        a.Status = #{record.status,jdbcType=NVARCHAR},
      </if>
      <if test="record.flowstatus != null" >
        a.FlowStatus = #{record.flowstatus,jdbcType=NVARCHAR},
      </if>
      <if test="record.datetimecreated != null" >
        a.DateTimeCreated = #{record.datetimecreated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.datetimemodified != null" >
        a.DateTimeModified = #{record.datetimemodified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isdeleted != null" >
        a.isDeleted = #{record.isdeleted,jdbcType=BIT},
      </if>
      <if test="record.unqualifiedqualifications != null" >
        a.UnqualifiedQualifications = #{record.unqualifiedqualifications,jdbcType=NVARCHAR},
      </if>
      <if test="record.abnormalityreasons != null" >
        a.AbnormalityReasons = #{record.abnormalityreasons,jdbcType=NVARCHAR},
      </if>
      <if test="record.qualificationmatching != null" >
        a.QualificationMatching = #{record.qualificationmatching,jdbcType=NVARCHAR},
      </if>
      <if test="record.graduateschool != null" >
        a.GraduateSchool = #{record.graduateschool,jdbcType=NVARCHAR},
      </if>
      <if test="record.majors != null" >
        a.majors = #{record.majors,jdbcType=NVARCHAR},
      </if>
      <if test="record.educational != null" >
        a.Educational = #{record.educational,jdbcType=NVARCHAR},
      </if>
      <if test="record.degree != null" >
        a.degree = #{record.degree,jdbcType=NVARCHAR},
      </if>
      <if test="record.experience != null" >
        a.Experience = #{record.experience,jdbcType=NVARCHAR},
      </if>
      <if test="record.standardsmatching != null" >
        a.StandardsMatching = #{record.standardsmatching,jdbcType=NVARCHAR},
      </if>
      <if test="record.jobstype != null" >
        a.JobsType = #{record.jobstype,jdbcType=NVARCHAR},
      </if>
      <if test="record.jobsgrade != null" >
        a.JobsGrade = #{record.jobsgrade,jdbcType=NVARCHAR},
      </if>
      <if test="record.havequalificationseq != null" >
        a.HaveQualificationSeq = #{record.havequalificationseq,jdbcType=NVARCHAR},
      </if>
      <if test="record.havequalificationgrade != null" >
        a.HaveQualificationGrade = #{record.havequalificationgrade,jdbcType=NVARCHAR},
      </if>
      <if test="record.havequalificationgradeTime != null" >
        a.HaveQualificationGrade_Time = #{record.havequalificationgradeTime,jdbcType=NVARCHAR},
      </if>
      <if test="record.workconditionsseq != null" >
        a.WorkConditionsSeq = #{record.workconditionsseq,jdbcType=NVARCHAR},
      </if>
      <if test="record.workconditionsgrade != null" >
        a.WorkConditionsGrade = #{record.workconditionsgrade,jdbcType=NVARCHAR},
      </if>
      <if test="record.workconditionsgradeAnnual != null" >
        a.WorkConditionsGrade_annual = #{record.workconditionsgradeAnnual,jdbcType=NVARCHAR},
      </if>
      <if test="record.nuclearresultsfront != null" >
        a.NuclearResultsFront = #{record.nuclearresultsfront,jdbcType=NVARCHAR},
      </if>
      <if test="record.nuclearresultsfrontAnnual != null" >
        a.NuclearResultsFront_annual = #{record.nuclearresultsfrontAnnual,jdbcType=NVARCHAR},
      </if>
      <if test="record.improvementplanclosedloop != null" >
        a.ImprovementPlanClosedloop = #{record.improvementplanclosedloop,jdbcType=BIT},
      </if>
      <if test="record.processid != null" >
        a.processId = #{record.processid,jdbcType=VARCHAR},
      </if>
      <if test="record.submittime != null" >
        a.submitTime = #{record.submittime,jdbcType=TIMESTAMP},
      </if>
    </set>
    from T_Apply a
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Sep 19 09:42:01 CST 2017.
    -->
    update T_Apply a
    set a.id = #{record.id,jdbcType=NVARCHAR},
      a.No = #{record.no,jdbcType=NVARCHAR},
      a.Type = #{record.type,jdbcType=NVARCHAR},
      a.Seq = #{record.seq,jdbcType=NVARCHAR},
      a.Grade = #{record.grade,jdbcType=NVARCHAR},
      a.UserId = #{record.userid,jdbcType=NVARCHAR},
      a.UserName = #{record.username,jdbcType=NVARCHAR},
      a.DeptCode = #{record.deptcode,jdbcType=NVARCHAR},
      a.DeptName = #{record.deptname,jdbcType=NVARCHAR},
      a.Status = #{record.status,jdbcType=NVARCHAR},
      a.FlowStatus = #{record.flowstatus,jdbcType=NVARCHAR},
      a.DateTimeCreated = #{record.datetimecreated,jdbcType=TIMESTAMP},
      a.DateTimeModified = #{record.datetimemodified,jdbcType=TIMESTAMP},
      a.isDeleted = #{record.isdeleted,jdbcType=BIT},
      a.UnqualifiedQualifications = #{record.unqualifiedqualifications,jdbcType=NVARCHAR},
      a.AbnormalityReasons = #{record.abnormalityreasons,jdbcType=NVARCHAR},
      a.QualificationMatching = #{record.qualificationmatching,jdbcType=NVARCHAR},
      a.GraduateSchool = #{record.graduateschool,jdbcType=NVARCHAR},
      a.majors = #{record.majors,jdbcType=NVARCHAR},
      a.Educational = #{record.educational,jdbcType=NVARCHAR},
      a.degree = #{record.degree,jdbcType=NVARCHAR},
      a.Experience = #{record.experience,jdbcType=NVARCHAR},
      a.StandardsMatching = #{record.standardsmatching,jdbcType=NVARCHAR},
      a.JobsType = #{record.jobstype,jdbcType=NVARCHAR},
      a.JobsGrade = #{record.jobsgrade,jdbcType=NVARCHAR},
      a.HaveQualificationSeq = #{record.havequalificationseq,jdbcType=NVARCHAR},
      a.HaveQualificationGrade = #{record.havequalificationgrade,jdbcType=NVARCHAR},
      a.HaveQualificationGrade_Time = #{record.havequalificationgradeTime,jdbcType=NVARCHAR},
      a.WorkConditionsSeq = #{record.workconditionsseq,jdbcType=NVARCHAR},
      a.WorkConditionsGrade = #{record.workconditionsgrade,jdbcType=NVARCHAR},
      a.WorkConditionsGrade_annual = #{record.workconditionsgradeAnnual,jdbcType=NVARCHAR},
      a.NuclearResultsFront = #{record.nuclearresultsfront,jdbcType=NVARCHAR},
      a.NuclearResultsFront_annual = #{record.nuclearresultsfrontAnnual,jdbcType=NVARCHAR},
      a.ImprovementPlanClosedloop = #{record.improvementplanclosedloop,jdbcType=BIT},
      a.processId = #{record.processid,jdbcType=VARCHAR},
      a.submitTime = #{record.submittime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dynastech.model.entity.Apply" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Sep 19 09:42:01 CST 2017.
    -->
    update T_Apply
    <set >
      <if test="no != null" >
        No = #{no,jdbcType=NVARCHAR},
      </if>
      <if test="type != null" >
        Type = #{type,jdbcType=NVARCHAR},
      </if>
      <if test="seq != null" >
        Seq = #{seq,jdbcType=NVARCHAR},
      </if>
      <if test="grade != null" >
        Grade = #{grade,jdbcType=NVARCHAR},
      </if>
      <if test="userid != null" >
        UserId = #{userid,jdbcType=NVARCHAR},
      </if>
      <if test="username != null" >
        UserName = #{username,jdbcType=NVARCHAR},
      </if>
      <if test="deptcode != null" >
        DeptCode = #{deptcode,jdbcType=NVARCHAR},
      </if>
      <if test="deptname != null" >
        DeptName = #{deptname,jdbcType=NVARCHAR},
      </if>
      <if test="status != null" >
        Status = #{status,jdbcType=NVARCHAR},
      </if>
      <if test="flowstatus != null" >
        FlowStatus = #{flowstatus,jdbcType=NVARCHAR},
      </if>
      <if test="datetimecreated != null" >
        DateTimeCreated = #{datetimecreated,jdbcType=TIMESTAMP},
      </if>
      <if test="datetimemodified != null" >
        DateTimeModified = #{datetimemodified,jdbcType=TIMESTAMP},
      </if>
      <if test="isdeleted != null" >
        isDeleted = #{isdeleted,jdbcType=BIT},
      </if>
      <if test="unqualifiedqualifications != null" >
        UnqualifiedQualifications = #{unqualifiedqualifications,jdbcType=NVARCHAR},
      </if>
      <if test="abnormalityreasons != null" >
        AbnormalityReasons = #{abnormalityreasons,jdbcType=NVARCHAR},
      </if>
      <if test="qualificationmatching != null" >
        QualificationMatching = #{qualificationmatching,jdbcType=NVARCHAR},
      </if>
      <if test="graduateschool != null" >
        GraduateSchool = #{graduateschool,jdbcType=NVARCHAR},
      </if>
      <if test="majors != null" >
        majors = #{majors,jdbcType=NVARCHAR},
      </if>
      <if test="educational != null" >
        Educational = #{educational,jdbcType=NVARCHAR},
      </if>
      <if test="degree != null" >
        degree = #{degree,jdbcType=NVARCHAR},
      </if>
      <if test="experience != null" >
        Experience = #{experience,jdbcType=NVARCHAR},
      </if>
      <if test="standardsmatching != null" >
        StandardsMatching = #{standardsmatching,jdbcType=NVARCHAR},
      </if>
      <if test="jobstype != null" >
        JobsType = #{jobstype,jdbcType=NVARCHAR},
      </if>
      <if test="jobsgrade != null" >
        JobsGrade = #{jobsgrade,jdbcType=NVARCHAR},
      </if>
      <if test="havequalificationseq != null" >
        HaveQualificationSeq = #{havequalificationseq,jdbcType=NVARCHAR},
      </if>
      <if test="havequalificationgrade != null" >
        HaveQualificationGrade = #{havequalificationgrade,jdbcType=NVARCHAR},
      </if>
      <if test="havequalificationgradeTime != null" >
        HaveQualificationGrade_Time = #{havequalificationgradeTime,jdbcType=NVARCHAR},
      </if>
      <if test="workconditionsseq != null" >
        WorkConditionsSeq = #{workconditionsseq,jdbcType=NVARCHAR},
      </if>
      <if test="workconditionsgrade != null" >
        WorkConditionsGrade = #{workconditionsgrade,jdbcType=NVARCHAR},
      </if>
      <if test="workconditionsgradeAnnual != null" >
        WorkConditionsGrade_annual = #{workconditionsgradeAnnual,jdbcType=NVARCHAR},
      </if>
      <if test="nuclearresultsfront != null" >
        NuclearResultsFront = #{nuclearresultsfront,jdbcType=NVARCHAR},
      </if>
      <if test="nuclearresultsfrontAnnual != null" >
        NuclearResultsFront_annual = #{nuclearresultsfrontAnnual,jdbcType=NVARCHAR},
      </if>
      <if test="improvementplanclosedloop != null" >
        ImprovementPlanClosedloop = #{improvementplanclosedloop,jdbcType=BIT},
      </if>
      <if test="processid != null" >
        processId = #{processid,jdbcType=VARCHAR},
      </if>
      <if test="submittime != null" >
        submitTime = #{submittime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=NVARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dynastech.model.entity.Apply" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Sep 19 09:42:01 CST 2017.
    -->
    update T_Apply
    set No = #{no,jdbcType=NVARCHAR},
      Type = #{type,jdbcType=NVARCHAR},
      Seq = #{seq,jdbcType=NVARCHAR},
      Grade = #{grade,jdbcType=NVARCHAR},
      UserId = #{userid,jdbcType=NVARCHAR},
      UserName = #{username,jdbcType=NVARCHAR},
      DeptCode = #{deptcode,jdbcType=NVARCHAR},
      DeptName = #{deptname,jdbcType=NVARCHAR},
      Status = #{status,jdbcType=NVARCHAR},
      FlowStatus = #{flowstatus,jdbcType=NVARCHAR},
      DateTimeCreated = #{datetimecreated,jdbcType=TIMESTAMP},
      DateTimeModified = #{datetimemodified,jdbcType=TIMESTAMP},
      isDeleted = #{isdeleted,jdbcType=BIT},
      UnqualifiedQualifications = #{unqualifiedqualifications,jdbcType=NVARCHAR},
      AbnormalityReasons = #{abnormalityreasons,jdbcType=NVARCHAR},
      QualificationMatching = #{qualificationmatching,jdbcType=NVARCHAR},
      GraduateSchool = #{graduateschool,jdbcType=NVARCHAR},
      majors = #{majors,jdbcType=NVARCHAR},
      Educational = #{educational,jdbcType=NVARCHAR},
      degree = #{degree,jdbcType=NVARCHAR},
      Experience = #{experience,jdbcType=NVARCHAR},
      StandardsMatching = #{standardsmatching,jdbcType=NVARCHAR},
      JobsType = #{jobstype,jdbcType=NVARCHAR},
      JobsGrade = #{jobsgrade,jdbcType=NVARCHAR},
      HaveQualificationSeq = #{havequalificationseq,jdbcType=NVARCHAR},
      HaveQualificationGrade = #{havequalificationgrade,jdbcType=NVARCHAR},
      HaveQualificationGrade_Time = #{havequalificationgradeTime,jdbcType=NVARCHAR},
      WorkConditionsSeq = #{workconditionsseq,jdbcType=NVARCHAR},
      WorkConditionsGrade = #{workconditionsgrade,jdbcType=NVARCHAR},
      WorkConditionsGrade_annual = #{workconditionsgradeAnnual,jdbcType=NVARCHAR},
      NuclearResultsFront = #{nuclearresultsfront,jdbcType=NVARCHAR},
      NuclearResultsFront_annual = #{nuclearresultsfrontAnnual,jdbcType=NVARCHAR},
      ImprovementPlanClosedloop = #{improvementplanclosedloop,jdbcType=BIT},
      processId = #{processid,jdbcType=VARCHAR},
      submitTime = #{submittime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=NVARCHAR}
  </update>
  
  <select id="selectApplyWithEval" parameterType="map" resultMap="applyWithEval">
  	 select
    <include refid="Base_Column_List" />,ef.status as evalStatus,ef.id as evaluationFormId,ef.submitTime as evalsubmitTime,ef.processId as evalProcessId
    from T_Apply a left join t_evaluationform ef on a.id=ef.applyId and ef.isdeleted=0
    where a.userid=#{userId} and a.status=#{status}
  </select>
  
   <select id="selectApplyWithEvalByEFId" parameterType="map" resultMap="applyWithEval">
  	 select
    <include refid="Base_Column_List" />,ef.status as evalStatus,ef.id as evaluationFormId,ef.submitTime as evalsubmitTime,ef.processId as evalProcessId
    from T_Apply a left join t_evaluationform ef on a.id=ef.applyId and ef.isdeleted=0
    where ef.id=#{efId}
  </select>
  
  <select id="getCount" parameterType="map" resultType="int">
  	 select count(1) from T_Apply a where isdeleted=0 and a.seq=#{seq} and userId=#{userId} and Convert(varchar(4),submitTime,120)=#{year} and 
  	 a.status!=#{status}
  </select>
</mapper>