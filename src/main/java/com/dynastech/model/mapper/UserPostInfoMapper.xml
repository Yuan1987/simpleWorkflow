<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dynastech.model.mapper.UserPostInfoMapper" >
  <resultMap id="BaseResultMap" type="com.dynastech.model.entity.UserPostInfo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 30 15:28:03 CST 2017.
    -->
    <result column="upi_userId" property="userid" jdbcType="VARCHAR" />
    <result column="upi_JobsTypeId" property="jobstypeid" jdbcType="VARCHAR" />
    <result column="upi_JobsType" property="jobstype" jdbcType="VARCHAR" />
    <result column="upi_JobsGrade" property="jobsgrade" jdbcType="VARCHAR" />
    <result column="upi_havequalificationseqID" property="havequalificationseqid" jdbcType="VARCHAR" />
    <result column="upi_havequalificationseq" property="havequalificationseq" jdbcType="VARCHAR" />
    <result column="upi_havequalificationgrade" property="havequalificationgrade" jdbcType="VARCHAR" />
    <result column="upi_havequalificationgradeTime" property="havequalificationgradetime" jdbcType="VARCHAR" />
    <result column="upi_workconditionsseq" property="workconditionsseq" jdbcType="VARCHAR" />
    <result column="upi_workconditionsgrade" property="workconditionsgrade" jdbcType="VARCHAR" />
    <result column="upi_workconditionsgradeAnnual" property="workconditionsgradeannual" jdbcType="VARCHAR" />
    <result column="upi_nuclearresultsfront" property="nuclearresultsfront" jdbcType="BIT" />
    <result column="upi_nuclearresultsfrontAnnual" property="nuclearresultsfrontannual" jdbcType="VARCHAR" />
    <result column="upi_improvementplanclosedloop" property="improvementplanclosedloop" jdbcType="BIT" />
    <result column="upi_graduateschool" property="graduateschool" jdbcType="VARCHAR" />
    <result column="upi_majors" property="majors" jdbcType="VARCHAR" />
    <result column="upi_educational" property="educational" jdbcType="VARCHAR" />
    <result column="upi_degree" property="degree" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 30 15:28:03 CST 2017.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 30 15:28:03 CST 2017.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 30 15:28:03 CST 2017.
    -->
    upi.userId as upi_userId, upi.JobsTypeId as upi_JobsTypeId, upi.JobsType as upi_JobsType, 
    upi.JobsGrade as upi_JobsGrade, upi.havequalificationseqID as upi_havequalificationseqID, 
    upi.havequalificationseq as upi_havequalificationseq, upi.havequalificationgrade as upi_havequalificationgrade, 
    upi.havequalificationgradeTime as upi_havequalificationgradeTime, upi.workconditionsseq as upi_workconditionsseq, 
    upi.workconditionsgrade as upi_workconditionsgrade, upi.workconditionsgradeAnnual as upi_workconditionsgradeAnnual, 
    upi.nuclearresultsfront as upi_nuclearresultsfront, upi.nuclearresultsfrontAnnual as upi_nuclearresultsfrontAnnual, 
    upi.improvementplanclosedloop as upi_improvementplanclosedloop, upi.graduateschool as upi_graduateschool, 
    upi.majors as upi_majors, upi.educational as upi_educational, upi.degree as upi_degree
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.dynastech.model.entity.UserPostInfoExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 30 15:28:03 CST 2017.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from RS_USER_POST_INFO upi
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.dynastech.model.entity.UserPostInfoExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 30 15:28:03 CST 2017.
    -->
    delete upi from RS_USER_POST_INFO upi
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dynastech.model.entity.UserPostInfo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 30 15:28:03 CST 2017.
    -->
    insert into RS_USER_POST_INFO (userId, JobsTypeId, JobsType, 
      JobsGrade, havequalificationseqID, havequalificationseq, 
      havequalificationgrade, havequalificationgradeTime, 
      workconditionsseq, workconditionsgrade, 
      workconditionsgradeAnnual, nuclearresultsfront, 
      nuclearresultsfrontAnnual, improvementplanclosedloop, 
      graduateschool, majors, educational, 
      degree)
    values (#{userid,jdbcType=VARCHAR}, #{jobstypeid,jdbcType=VARCHAR}, #{jobstype,jdbcType=VARCHAR}, 
      #{jobsgrade,jdbcType=VARCHAR}, #{havequalificationseqid,jdbcType=VARCHAR}, #{havequalificationseq,jdbcType=VARCHAR}, 
      #{havequalificationgrade,jdbcType=VARCHAR}, #{havequalificationgradetime,jdbcType=VARCHAR}, 
      #{workconditionsseq,jdbcType=VARCHAR}, #{workconditionsgrade,jdbcType=VARCHAR}, 
      #{workconditionsgradeannual,jdbcType=VARCHAR}, #{nuclearresultsfront,jdbcType=BIT}, 
      #{nuclearresultsfrontannual,jdbcType=VARCHAR}, #{improvementplanclosedloop,jdbcType=BIT}, 
      #{graduateschool,jdbcType=VARCHAR}, #{majors,jdbcType=VARCHAR}, #{educational,jdbcType=VARCHAR}, 
      #{degree,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.dynastech.model.entity.UserPostInfo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 30 15:28:03 CST 2017.
    -->
    insert into RS_USER_POST_INFO
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        userId,
      </if>
      <if test="jobstypeid != null" >
        JobsTypeId,
      </if>
      <if test="jobstype != null" >
        JobsType,
      </if>
      <if test="jobsgrade != null" >
        JobsGrade,
      </if>
      <if test="havequalificationseqid != null" >
        havequalificationseqID,
      </if>
      <if test="havequalificationseq != null" >
        havequalificationseq,
      </if>
      <if test="havequalificationgrade != null" >
        havequalificationgrade,
      </if>
      <if test="havequalificationgradetime != null" >
        havequalificationgradeTime,
      </if>
      <if test="workconditionsseq != null" >
        workconditionsseq,
      </if>
      <if test="workconditionsgrade != null" >
        workconditionsgrade,
      </if>
      <if test="workconditionsgradeannual != null" >
        workconditionsgradeAnnual,
      </if>
      <if test="nuclearresultsfront != null" >
        nuclearresultsfront,
      </if>
      <if test="nuclearresultsfrontannual != null" >
        nuclearresultsfrontAnnual,
      </if>
      <if test="improvementplanclosedloop != null" >
        improvementplanclosedloop,
      </if>
      <if test="graduateschool != null" >
        graduateschool,
      </if>
      <if test="majors != null" >
        majors,
      </if>
      <if test="educational != null" >
        educational,
      </if>
      <if test="degree != null" >
        degree,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="jobstypeid != null" >
        #{jobstypeid,jdbcType=VARCHAR},
      </if>
      <if test="jobstype != null" >
        #{jobstype,jdbcType=VARCHAR},
      </if>
      <if test="jobsgrade != null" >
        #{jobsgrade,jdbcType=VARCHAR},
      </if>
      <if test="havequalificationseqid != null" >
        #{havequalificationseqid,jdbcType=VARCHAR},
      </if>
      <if test="havequalificationseq != null" >
        #{havequalificationseq,jdbcType=VARCHAR},
      </if>
      <if test="havequalificationgrade != null" >
        #{havequalificationgrade,jdbcType=VARCHAR},
      </if>
      <if test="havequalificationgradetime != null" >
        #{havequalificationgradetime,jdbcType=VARCHAR},
      </if>
      <if test="workconditionsseq != null" >
        #{workconditionsseq,jdbcType=VARCHAR},
      </if>
      <if test="workconditionsgrade != null" >
        #{workconditionsgrade,jdbcType=VARCHAR},
      </if>
      <if test="workconditionsgradeannual != null" >
        #{workconditionsgradeannual,jdbcType=VARCHAR},
      </if>
      <if test="nuclearresultsfront != null" >
        #{nuclearresultsfront,jdbcType=BIT},
      </if>
      <if test="nuclearresultsfrontannual != null" >
        #{nuclearresultsfrontannual,jdbcType=VARCHAR},
      </if>
      <if test="improvementplanclosedloop != null" >
        #{improvementplanclosedloop,jdbcType=BIT},
      </if>
      <if test="graduateschool != null" >
        #{graduateschool,jdbcType=VARCHAR},
      </if>
      <if test="majors != null" >
        #{majors,jdbcType=VARCHAR},
      </if>
      <if test="educational != null" >
        #{educational,jdbcType=VARCHAR},
      </if>
      <if test="degree != null" >
        #{degree,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dynastech.model.entity.UserPostInfoExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 30 15:28:03 CST 2017.
    -->
    select count(*) from RS_USER_POST_INFO upi
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 30 15:28:03 CST 2017.
    -->
    update RS_USER_POST_INFO upi
    <set >
      <if test="record.userid != null" >
        upi.userId = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.jobstypeid != null" >
        upi.JobsTypeId = #{record.jobstypeid,jdbcType=VARCHAR},
      </if>
      <if test="record.jobstype != null" >
        upi.JobsType = #{record.jobstype,jdbcType=VARCHAR},
      </if>
      <if test="record.jobsgrade != null" >
        upi.JobsGrade = #{record.jobsgrade,jdbcType=VARCHAR},
      </if>
      <if test="record.havequalificationseqid != null" >
        upi.havequalificationseqID = #{record.havequalificationseqid,jdbcType=VARCHAR},
      </if>
      <if test="record.havequalificationseq != null" >
        upi.havequalificationseq = #{record.havequalificationseq,jdbcType=VARCHAR},
      </if>
      <if test="record.havequalificationgrade != null" >
        upi.havequalificationgrade = #{record.havequalificationgrade,jdbcType=VARCHAR},
      </if>
      <if test="record.havequalificationgradetime != null" >
        upi.havequalificationgradeTime = #{record.havequalificationgradetime,jdbcType=VARCHAR},
      </if>
      <if test="record.workconditionsseq != null" >
        upi.workconditionsseq = #{record.workconditionsseq,jdbcType=VARCHAR},
      </if>
      <if test="record.workconditionsgrade != null" >
        upi.workconditionsgrade = #{record.workconditionsgrade,jdbcType=VARCHAR},
      </if>
      <if test="record.workconditionsgradeannual != null" >
        upi.workconditionsgradeAnnual = #{record.workconditionsgradeannual,jdbcType=VARCHAR},
      </if>
      <if test="record.nuclearresultsfront != null" >
        upi.nuclearresultsfront = #{record.nuclearresultsfront,jdbcType=BIT},
      </if>
      <if test="record.nuclearresultsfrontannual != null" >
        upi.nuclearresultsfrontAnnual = #{record.nuclearresultsfrontannual,jdbcType=VARCHAR},
      </if>
      <if test="record.improvementplanclosedloop != null" >
        upi.improvementplanclosedloop = #{record.improvementplanclosedloop,jdbcType=BIT},
      </if>
      <if test="record.graduateschool != null" >
        upi.graduateschool = #{record.graduateschool,jdbcType=VARCHAR},
      </if>
      <if test="record.majors != null" >
        upi.majors = #{record.majors,jdbcType=VARCHAR},
      </if>
      <if test="record.educational != null" >
        upi.educational = #{record.educational,jdbcType=VARCHAR},
      </if>
      <if test="record.degree != null" >
        upi.degree = #{record.degree,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 30 15:28:03 CST 2017.
    -->
    update RS_USER_POST_INFO upi
    set upi.userId = #{record.userid,jdbcType=VARCHAR},
      upi.JobsTypeId = #{record.jobstypeid,jdbcType=VARCHAR},
      upi.JobsType = #{record.jobstype,jdbcType=VARCHAR},
      upi.JobsGrade = #{record.jobsgrade,jdbcType=VARCHAR},
      upi.havequalificationseqID = #{record.havequalificationseqid,jdbcType=VARCHAR},
      upi.havequalificationseq = #{record.havequalificationseq,jdbcType=VARCHAR},
      upi.havequalificationgrade = #{record.havequalificationgrade,jdbcType=VARCHAR},
      upi.havequalificationgradeTime = #{record.havequalificationgradetime,jdbcType=VARCHAR},
      upi.workconditionsseq = #{record.workconditionsseq,jdbcType=VARCHAR},
      upi.workconditionsgrade = #{record.workconditionsgrade,jdbcType=VARCHAR},
      upi.workconditionsgradeAnnual = #{record.workconditionsgradeannual,jdbcType=VARCHAR},
      upi.nuclearresultsfront = #{record.nuclearresultsfront,jdbcType=BIT},
      upi.nuclearresultsfrontAnnual = #{record.nuclearresultsfrontannual,jdbcType=VARCHAR},
      upi.improvementplanclosedloop = #{record.improvementplanclosedloop,jdbcType=BIT},
      upi.graduateschool = #{record.graduateschool,jdbcType=VARCHAR},
      upi.majors = #{record.majors,jdbcType=VARCHAR},
      upi.educational = #{record.educational,jdbcType=VARCHAR},
      upi.degree = #{record.degree,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>